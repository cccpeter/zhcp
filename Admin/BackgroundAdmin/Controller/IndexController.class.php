<?php
namespace BackgroundAdmin\Controller;
use Think\Controller;
class IndexController extends CommonController {
     public function index(){
    	$myDate = date('Y-m-d', time());
    	$this->assign('day',$myDate);
    	$this->display();
    }
    public function loginout(){
    	session_unset();
      	session_destroy();
    	redirect(U('BackgroundAdmin/Login/index'));
    }
    public function querygrade(){
        if(IS_POST){
            $grade_id=I('post.demo');
            redirect(U('BackgroundAdmin/Index/queryclass',array('grade_id'=>$grade_id)));
        }
        $admin_id=$_SESSION['admin_id'];
        $sys_id=M('admin')->where(array('admin_id'=>$admin_id))->find();
        $grade=M('grade')->where(array('sys_id'=>$sys_id['admin_sys']))->select();
        $this->assign('grade',$grade);
        $this->display();
    }
    public function queryclass(){
        if(IS_POST){
            $pclass_id=I('post.demo');
            $grade_id=I('post.grade_id');
            $pclass_name=M('pclass')->where(array('pclass_id'=>$pclass_id))->field('pclass_name')->find();
            $grade=M('grade')->where(array('grade_id'=>$grade_id))->find();
            $grade['grade_name']=M('grade')->where(array('grade_id'=>$grade['grade_id']))->field('grade_name')->find();
            $user=M('user')->where(array('pclass_id'=>$pclass_id,
                'grade_id'=>$grade['grade_id']))->select();
            $pclass_name=$grade['grade_name']['grade_name']."级".$pclass_name['pclass_name'];
            $nowyear=M('schoolyear')->where(array('schoolyear_nowyear'=>1))->find();
            $i=0;
            foreach ($user as $value) {
               $i++;
            } 
            for($j=0;$j<$i;$j++){
                $us=M('basetwograde')->where(array(
                    'schoolyear_id'=>$nowyear['schoolyear_id'],
                    'user_id'=>$user[$j]['user_id']
                    ))->find();

                if($us['user_id']>=1){
                    $user[$j]['isoff']=1;
                    $user[$j]['basetwograde_state']=$us['basetwograde_state'];
                }else{
                    $user[$j]['isoff']=-1;
                    $user[$j]['basetwograde_state']=1;
                }
            }
            $this->assign('pclass_name',$pclass_name);
            $this->assign('user',$user);
            $grade=M('instructor')->where(array('instructor_id'=>$instructor_id))->field('grade_id')->find();
            $pclass=M('pclass')->where(array('grade_id'=>$grade_id))->select();
            $this->assign('pclass',$pclass);
            $this->assign('grade_id',$grade_id);
                $this->display();
            
            return;
        }
        if(IS_GET){
            $pclass_id=I('get.pclass_id');
            $grade_id=I('get.grade_id');
            $pclass_name=M('pclass')->where(array('pclass_id'=>$pclass_id))->field('pclass_name')->find();
            $grade=M('grade')->where(array('grade_id'=>$grade_id))->find();
            $grade['grade_name']=M('grade')->where(array('grade_id'=>$grade['grade_id']))->field('grade_name')->find();
            $user=M('user')->where(array('pclass_id'=>$pclass_id,
                'grade_id'=>$grade['grade_id']))->select();
            $pclass_name=$grade['grade_name']['grade_name']."级".$pclass_name['pclass_name'];
            $nowyear=M('schoolyear')->where(array('schoolyear_nowyear'=>1))->find();
            $i=0;
            foreach ($user as $value) {
               $i++;
            } 
            for($j=0;$j<$i;$j++){
                $us=M('basetwograde')->where(array(
                    'schoolyear_id'=>$nowyear['schoolyear_id'],
                    'user_id'=>$user[$j]['user_id']
                    ))->find();

                if($us['user_id']>=1){
                    $user[$j]['isoff']=1;
                    $user[$j]['basetwograde_state']=$us['basetwograde_state'];
                }else{
                    $user[$j]['isoff']=-1;
                    $user[$j]['basetwograde_state']=1;
                }
            }
            $this->assign('pclass_name',$pclass_name);
            $this->assign('user',$user);
            $grade=M('instructor')->where(array('instructor_id'=>$instructor_id))->field('grade_id')->find();
            $pclass=M('pclass')->where(array('grade_id'=>$grade_id))->select();
            $this->assign('pclass',$pclass);
            $this->assign('grade_id',$grade_id);
                $this->display();
            
            return;
        }
        // $grade=M('instructor')->where(array('instructor_id'=>$instructor_id))->field('grade_id')->find();
        // $pclass=M('pclass')->where(array('grade_id'=>$grade['grade_id']))->select();
        // $this->assign('grade',$grade);
        // $this->assign('pclass',$pclass);
        // $this->display();
    }

    public function audit(){
        if(IS_GET){
            $user_id=I('get.user_id');
            $nowyear=M('schoolyear')->where(array('schoolyear_nowyear'=>1))->find();
            $base1=M('basetwograde')->where(array(
            'user_id'=>$user_id,
            'schoolyear_id'=>$nowyear['schoolyear_id']
            ))->select();
        $deve1=M('deveonelevelgrade')->where(array(
            'user_id'=>$user_id,
            'schoolyear_id'=>$nowyear['schoolyear_id']
            ))->select();

        $basearry=M('basetwograde')->where(array(
            'user_id'=>$user_id,
            'schoolyear_id'=>$nowyear['schoolyear_id']
            ))->select();
        $devearray=M('deveonelevelgrade')->where(array(
            'user_id'=>$user_id,
            'schoolyear_id'=>$nowyear['schoolyear_id']
            ))->select();
        $i=0;
        $i1=0;
        //2维转1维
        foreach ($devearray as $value) {
           $i++;
        } 
        $i1=$i;
        $parray=array();
        $parray1=array();
        $deveid=array();
        for($j=0;$j<$i;$j++){
            $parray[$j]=explode(",",$devearray[$j]['deveonelevelgrade_url']);
            $deveid[$j]['deveonelevelgrade_id']=$devearray[$j]['deveonelevelindex_id'];
        }
        for($j=0;$j<$i1;$j++){
            $parray1[$j]=explode(",",$devearray[$j]['deveonelevelgrade_reason']);
        }
        $py=array();
        $i=0;
        $i1=0;
        $j=0;
        foreach ($parray as $key => $value) {
                foreach ($value as $ky => $ve) {
                    if($ve!=""){
                        $py[$i]['deveid']=$deveid[$j]['deveonelevelgrade_id'];
                        $py[$i]['url']=$ve; 
                        $i++;
                    }
               }
               $j++;
           }   
       foreach ($parray1 as $key => $value) {
           foreach ($value as $ky => $ve) {
                if($ve!=""){
                    $py[$i1]['reason']=$ve;
                    $i1++;
                }
           }
       }   
        // dump($deve1);
        // dump($py);
            $academicscore=M('table')->where(array(
                'schoolyear_id'=>$nowyear['schoolyear_id'],
                'user_id'=>$user_id
                ))->find();
            if($academicscore){
                $aca=($academicscore['table_academicscore']-50)/10;
            }else{
                $aca="未导入";
            }

            $basenums=2+M('basetwolevelindex')->count();
            $devenums=1+M('deveonelevelindex')->count();
            $deve=M('deveonelevelindex')->select();
            $pclass_id=M('user')->where(array('user_id'=>$user_id))->field('pclass_id,grade_id')->find();
            $pclassid=$pclass_id['pclass_id'];
            $grade_id=$pclass_id['grade_id'];
            $this->assign('aca',$aca);
            $this->assign('pclassid',$pclassid);
            $this->assign('grade_id',$grade_id);
            $this->assign('deve1',$deve1);
            $this->assign('py',$py);
            $this->assign('base',$base);
            $this->assign('base1',$base1);
            $this->assign('deve',$deve);
            $this->assign('dnum',$devenums);
            $this->assign('num',$basenums);
            $this->assign('userid',$user_id);
            $this->display();
            return;
        }
        $basenums=2+M('basetwolevelindex')->count();
        $base=M('basetwolevelindex')->select();
        $devenums=1+M('deveonelevelindex')->count();
        $deve=M('deveonelevelindex')->select();
        $this->assign('py',$py);
        $this->assign('base',$base);
        $this->assign('deve',$deve);
        $this->assign('dnum',$devenums);
        $this->assign('num',$basenums);
        $this->assign('userid',$user_id);
        $this->display();
    }
    public function auditscore(){
        if(IS_POST){
            $user_id=I('user_id');
            $pclass_id=M('user')->where(array('user_id'=>$user_id))->field('pclass_id')->find();
            $pclassid=$pclass_id['pclass_id'];
            $grade=M('pclass')->where(array('pclass_id'=>$pclassid))->find();
            $grade_id=$grade['grade_id'];
            $dev=array(
                'g1'=>I('post.g1'),
                'g2'=>I('post.g2'),
                'g3'=>I('post.g3'),
                'g4'=>I('post.g4'),
                'g5'=>I('post.g5'),
                );
            $bas=array(
                'one'=>I('post.one'),
                'two'=>I('post.two'),
                'three'=>I('post.three'),
                'four'=>I('post.four'),
                'five'=>I('post.five'),
                'six'=>I('post.six'),
                'senven'=>I('post.senven'),
                'eight'=>I('post.eight'),
                'nine'=>I('post.nine'),
                'ten'=>I('post.ten'),
                );
            //总分表
            // $score=I('post.score');//绩点
            // $academicscore=$score*10+50;
            $basescore=0;
            $devescore=0;
            foreach ($dev as $key => $value) {
                $devescore+=$value;
            }
            foreach ($bas as $key => $value) {
                $basescore+=$value;
            }
            // $total=($basescore+$devescore)*0.15+$academicscore*0.85;
            $nowyear=M('schoolyear')->where(array('schoolyear_nowyear'=>1))->find();
            $schoolyear_id=$nowyear['schoolyear_id'];
            $issave=M('table')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id
                ))->field('table_id')->find();
            if($issave){
                $oldtotal=M('table')->where(array('table_id'=>$issave['table_id']))->field('table_totalscore,table_average')->find();
                $total=$oldtotal['table_average']*0.85+($basescore+$devescore)*0.15;
                $re=M('table')->where(array('table_id'=>$issave['table_id']))->save(array(
                    'table_basescore'=>$basescore,
                    'table_devescore'=>$devescore,
                    'table_totalscore'=>$total
                    ));
            }else{
                $re=M('table')->add(array(
                    'table_basescore'=>$basescore,
                    'table_devescore'=>$devescore,
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id
                    ));
            }
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>1
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['one'],
                'basetwograde_state'=>3
                ));

            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>2
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['two'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>3
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['three'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>4
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['four'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>5
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['five'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>6
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['six'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>7
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['senven'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>8
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['eight'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>9
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['nine'],
                'basetwograde_state'=>3));
            $basetwograde_id=M('basetwograde')->where(array(
                'schoolyear_id'=>$schoolyear_id,
                'user_id'=>$user_id,
                'baseonelevelindex_id'=>10
                ))->find();
            $re=M('basetwograde')->where(array('basetwograde_id'=>$basetwograde_id['basetwograde_id']))->save(array('basetwograde_auditscore'=>$bas['ten'],
                'basetwograde_state'=>3));
            //发展
            if($dev['g1']!=''){
               $deveonelevelgrade_id=M('deveonelevelgrade')->where(array(
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id,
                    'deveonelevelindex_id'=>1
                ))->find();
               $re=M('deveonelevelgrade')->where(array('deveonelevelgrade_id'=>$deveonelevelgrade_id['deveonelevelgrade_id']))->save(array('deveonelevelgrade_auditscore'=>$dev['g1'],
                'eveonelevelgrade_state'=>3));
            }
            if($dev['g2']!=''){
               $deveonelevelgrade_id=M('deveonelevelgrade')->where(array(
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id,
                    'deveonelevelindex_id'=>2
                ))->find();
               $re=M('deveonelevelgrade')->where(array('deveonelevelgrade_id'=>$deveonelevelgrade_id['deveonelevelgrade_id']))->save(array('deveonelevelgrade_auditscore'=>$dev['g2'],
                'eveonelevelgrade_state'=>3));
            }
            if($dev['g3']!=''){
               $deveonelevelgrade_id=M('deveonelevelgrade')->where(array(
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id,
                    'deveonelevelindex_id'=>3
                ))->find();
               $re=M('deveonelevelgrade')->where(array('deveonelevelgrade_id'=>$deveonelevelgrade_id['deveonelevelgrade_id']))->save(array('deveonelevelgrade_auditscore'=>$dev['g3'],
                'eveonelevelgrade_state'=>3));
            }
            if($dev['g4']!=''){
               $deveonelevelgrade_id=M('deveonelevelgrade')->where(array(
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id,
                    'deveonelevelindex_id'=>4
                ))->find();
               $re=M('deveonelevelgrade')->where(array('deveonelevelgrade_id'=>$deveonelevelgrade_id['deveonelevelgrade_id']))->save(array('deveonelevelgrade_auditscore'=>$dev['g4'],
                'eveonelevelgrade_state'=>3));
            }
            if($dev['g5']!=''){
               $deveonelevelgrade_id=M('deveonelevelgrade')->where(array(
                    'schoolyear_id'=>$schoolyear_id,
                    'user_id'=>$user_id,
                    'deveonelevelindex_id'=>5
                ))->find();
               $re=M('deveonelevelgrade')->where(array('deveonelevelgrade_id'=>$deveonelevelgrade_id['deveonelevelgrade_id']))->save(array('deveonelevelgrade_auditscore'=>$dev['g5'],
                'eveonelevelgrade_state'=>3));
            }
            $m=new LogController();
            $time=date("Ymd",time());
            $ip= get_client_ip();
            $userid=$_SESSION['admin_id'];
            $usertype="系部管理员".$userid;
            $message="审核学生id=".$user_id."上一次总评分=".$oldtotal['table_totalscore'];
            $re=$m->writelog($ip,$userid,$usertype,$time,$message);
            $this->success('审核成功','queryclass/pclass_id/'.$pclassid.'/grade_id/'.$grade_id,1);
        }else{
            $this->error("非法操作");
        }
    }
}